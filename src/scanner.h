#ifndef XAN_SCANNER_H
#define XAN_SCANNER_H

#include <stddef.h>

#define TOKEN_BUILDER(X) \
	X(NO_TOKEN, PREC_NONE ),\
	X(TOKEN_LEFT_PAREN, PREC_CALL ),\
	X(TOKEN_RIGHT_PAREN, PREC_NONE ),\
	X(TOKEN_LEFT_BRACE, PREC_NONE ),\
	X(TOKEN_RIGHT_BRACE, PREC_NONE ),\
	X(TOKEN_LEFT_BRACKET, PREC_NONE ), \
	X(TOKEN_RIGHT_BRACKET, PREC_NONE ), \
	X(TOKEN_COMMA, PREC_NONE ),\
	X(TOKEN_COLON, PREC_NONE ),\
	X(TOKEN_DOT, PREC_INDEX ),\
	X(TOKEN_MINUS, PREC_TERM ),\
	X(TOKEN_PLUS, PREC_TERM ),\
	X(TOKEN_SEMICOLON, PREC_NONE ),\
	X(TOKEN_SLASH, PREC_FACTOR ),\
	X(TOKEN_STAR, PREC_FACTOR ),\
	X(TOKEN_BANG, PREC_NONE ),\
	X(TOKEN_BANG_EQUAL, PREC_EQUALITY ),\
	X(TOKEN_EQUAL, PREC_ASSIGNMENT ),\
	X(TOKEN_EQUAL_EQUAL, PREC_EQUALITY ),\
	X(TOKEN_GREATER, PREC_COMPARISON ),\
	X(TOKEN_GREATER_EQUAL , PREC_COMPARISON ),\
	X(TOKEN_LESS, PREC_COMPARISON ),\
	X(TOKEN_LESS_EQUAL, PREC_COMPARISON ),\
	X(TOKEN_IDENTIFIER, PREC_NONE ),\
	X(TOKEN_STRING, PREC_NONE ),\
	X(TOKEN_NUMBER, PREC_NONE ),\
	X(TOKEN_AND, PREC_AND ),\
	X(TOKEN_CATCH, PREC_NONE ), \
	X(TOKEN_CLASS, PREC_NONE ),\
	X(TOKEN_ELSE, PREC_NONE ),\
	X(TOKEN_FALSE, PREC_NONE ),\
	X(TOKEN_FOR, PREC_NONE ),\
	X(TOKEN_FUN, PREC_NONE ),\
	X(TOKEN_IF, PREC_NONE ),\
	X(TOKEN_NIL, PREC_NONE ),\
	X(TOKEN_OR, PREC_OR ),\
	X(TOKEN_RETURN, PREC_NONE ),\
	X(TOKEN_SUPER, PREC_NONE ),\
	X(TOKEN_THIS, PREC_NONE ),\
	X(TOKEN_THROW, PREC_NONE ),\
	X(TOKEN_TRUE, PREC_NONE ),\
	X(TOKEN_TRY, PREC_NONE ), \
	X(TOKEN_VAR, PREC_NONE ),\
	X(TOKEN_WHILE, PREC_NONE ),\
	X(TOKEN_ERROR, PREC_NONE ),\
	X(TOKEN_EOF, PREC_NONE ),\

#define BUILD_ENUM(t, c) t
typedef enum {
	TOKEN_BUILDER(BUILD_ENUM)
} TokenType;
#undef BUILD_ENUM

#define BUILD_NAMES(t, c) #t
static const char* const TokenNames[] = {
	TOKEN_BUILDER(BUILD_NAMES)
};
#undef BUILD_NAMES

typedef struct {
	TokenType type;
	const char *start;
	size_t length;
	size_t line;
} Token;

typedef struct Scanner Scanner;

Scanner* initScanner(const char *source);
Scanner *duplicateScanner(Scanner *s);
void endScanner(Scanner*);
Token scanToken(Scanner *s);

#endif /* XAN_SCANNER_H */
